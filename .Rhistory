source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
?portfolioBacktest
help portfolioBacktest()
help("portfolioBacktest")
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
portfolio_fun <- function(prices) {
X <- diff(log(prices))[-1] # log returns
mu <- colMeans(X)  # compute mean vector
Sigma <- cov(X)  # compute the SCM
w <- Variable(nrow(Sigma))
constrain1 <- w >= 0
constrain2 <- t(mu) %*% w == 1
constrain3 <- w[1:nrow(Sigma), ] > 0
#constrain4 <- sum(abs(w[1:nrow(Sigma), ])) <= 1
# sum(abs(w[] <= 1+1e-6))
prob <- Problem(Minimize(quad_form(w, Sigma)),
constraints = list(constrain1,
constrain2,
constrain3
#constrain4
)
)
result <- solve(prob)
return(as.vector(result$getValue(w)/sum(result$getValue(w))))
}
# Rolling
a_portfolio_fun <- function (prices) {
T_trn <- round(0.4*T)
X_log_trn <- X_log[1:T_trn, ]
X_log_tst <- X_log[(T_trn+1):T, ]
mu <- colMeans(X_log_trn)
Sigma <- cov(X_log_trn)
w_Markowitz_rolling <- X_log
w_Markowitz_rolling[] <- NA
rebal_indices <- T_trn + endpoints(X_log_tst, on = "weeks")
lookback <- 10*20  # maximum value is: floor(T_trn/20)*20
for (i in 1:length(rebal_indices)) {
# estimate moments
X_ <- X_log[(rebal_indices[i]-lookback+1):rebal_indices[i], ]
mu <- colMeans(X_)
Sigma <- cov(X_)
# design portfolio
w_Markowitz_rolling[rebal_indices[i], ] <- portolioMarkowitz(mu, Sigma, lmd = 2)
}
w_Markowitz_rolling <- na.omit(w_Markowitz_rolling)
}
res <- portfolioBacktest(portfolio_fun, prices[[1]], rebalance_every = 5)
res$error
#res$error_message
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
portfolio_fun <- function(prices) {
X <- diff(log(prices))[-1] # log returns
mu <- colMeans(X)  # compute mean vector
Sigma <- cov(X)  # compute the SCM
w <- Variable(nrow(Sigma))
constrain1 <- w >= 0
constrain2 <- t(mu) %*% w == 1
constrain3 <- w[1:nrow(Sigma), ] > 0
#constrain4 <- sum(abs(w[1:nrow(Sigma), ])) <= 1
# sum(abs(w[] <= 1+1e-6))
prob <- Problem(Minimize(quad_form(w, Sigma)),
constraints = list(constrain1,
constrain2,
constrain3
#constrain4
)
)
result <- solve(prob)
return(as.vector(result$getValue(w)/sum(result$getValue(w))))
}
# Rolling
a_portfolio_fun <- function (prices) {
T_trn <- round(0.4*T)
X_log_trn <- X_log[1:T_trn, ]
X_log_tst <- X_log[(T_trn+1):T, ]
mu <- colMeans(X_log_trn)
Sigma <- cov(X_log_trn)
w_Markowitz_rolling <- X_log
w_Markowitz_rolling[] <- NA
rebal_indices <- T_trn + endpoints(X_log_tst, on = "weeks")
lookback <- 10*20  # maximum value is: floor(T_trn/20)*20
for (i in 1:length(rebal_indices)) {
# estimate moments
X_ <- X_log[(rebal_indices[i]-lookback+1):rebal_indices[i], ]
mu <- colMeans(X_)
Sigma <- cov(X_)
# design portfolio
w_Markowitz_rolling[rebal_indices[i], ] <- portolioMarkowitz(mu, Sigma, lmd = 2)
}
w_Markowitz_rolling <- na.omit(w_Markowitz_rolling)
}
res <- portfolioBacktest(portfolio_fun, prices[[1]], rebalance_every = 5)
res$error
#res$error_message
portfolio_fun <- function(prices) {
X <- diff(log(prices))[-1] # log returns
mu <- colMeans(X)  # compute mean vector
Sigma <- cov(X)  # compute the SCM
w <- Variable(nrow(Sigma))
constrain1 <- w >= 0
constrain2 <- t(mu) %*% w == 1
constrain3 <- w[1:nrow(Sigma), ] > 0
#constrain4 <- sum(abs(w[1:nrow(Sigma), ])) <= 1
# sum(abs(w[] <= 1+1e-6))
prob <- Problem(Minimize(quad_form(w, Sigma)),
constraints = list(constrain1,
constrain2,
constrain3
#constrain4
)
)
result <- solve(prob)
return(as.vector(result$getValue(w)/sum(result$getValue(w))))
}
# Rolling
a_portfolio_fun <- function (prices) {
T_trn <- round(0.4*T)
X_log_trn <- X_log[1:T_trn, ]
X_log_tst <- X_log[(T_trn+1):T, ]
mu <- colMeans(X_log_trn)
Sigma <- cov(X_log_trn)
w_Markowitz_rolling <- X_log
w_Markowitz_rolling[] <- NA
rebal_indices <- T_trn + endpoints(X_log_tst, on = "weeks")
lookback <- 10*20  # maximum value is: floor(T_trn/20)*20
for (i in 1:length(rebal_indices)) {
# estimate moments
X_ <- X_log[(rebal_indices[i]-lookback+1):rebal_indices[i], ]
mu <- colMeans(X_)
Sigma <- cov(X_)
# design portfolio
w_Markowitz_rolling[rebal_indices[i], ] <- portolioMarkowitz(mu, Sigma, lmd = 2)
}
w_Markowitz_rolling <- na.omit(w_Markowitz_rolling)
}
res <- portfolioBacktest(portfolio_fun, prices[[1]], rebalance_every = 5)
res$error
#res$error_message
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
source('~/Documents/GitHub/portfolioOptimization/maxSharpe.R', echo=TRUE)
